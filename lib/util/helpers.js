"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.shallowEqualArray = exports.get = exports.mapValues = exports.isFunction = exports.isArray = void 0;
// Generated by CoffeeScript 2.5.0
var ref, toString;
toString = Object.prototype.toString;
// eslint-disable-next-line known-imports/no-unused-vars
var isArray = (ref = Array.isArray) != null ? ref : function (obj) {
  return toString.call(obj) === '[object Array]';
}; // eslint-disable-next-line known-imports/no-unused-vars

exports.isArray = isArray;

var isFunction = function isFunction(obj) {
  return toString.call(obj) === '[object Function]';
}; // eslint-disable-next-line known-imports/no-unused-vars


exports.isFunction = isFunction;

var mapValues = function mapValues(callback) {
  return function (obj) {
    var key, ret, val;
    ret = {};

    for (key in obj) {
      val = obj[key];
      ret[key] = callback(val);
    }

    return ret;
  };
}; // eslint-disable-next-line known-imports/no-unused-vars


exports.mapValues = mapValues;

var get = function get(path) {
  var pathParts;
  pathParts = path.split('.');
  return function (obj) {
    var i, len, pathPart, val;
    val = obj;

    for (i = 0, len = pathParts.length; i < len; i++) {
      pathPart = pathParts[i];

      if (val == null) {
        return;
      }

      val = val != null ? val[pathPart] : void 0;
    }

    return val;
  };
}; // eslint-disable-next-line known-imports/no-unused-vars


exports.get = get;

var shallowEqualArray = function shallowEqualArray(a, b) {
  var element, i, index, len;

  if (!((a != null ? a.length : void 0) != null && (b != null ? b.length : void 0) != null)) {
    return false;
  }

  if (a.length !== b.length) {
    return false;
  }

  for (index = i = 0, len = a.length; i < len; index = ++i) {
    element = a[index];

    if (element !== b[index]) {
      return false;
    }
  }

  return true;
};

exports.shallowEqualArray = shallowEqualArray;