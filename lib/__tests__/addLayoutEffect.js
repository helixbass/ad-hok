"use strict";

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _react = _interopRequireWildcard(require("react"));

var _reactTestingLibrary = require("react-testing-library");

require("jest-dom/extend-expect");

var _fp = require("lodash/fp");

var _ = require("..");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

// Generated by CoffeeScript 2.5.0
var Comp, Comp2, Comp3, Comp4, DisplayComp, PathDependency;

// eslint-disable-next-line coffee/prop-types
DisplayComp = function DisplayComp(_ref) {
  var x = _ref.x;
  return _react["default"].createElement("div", null, _react["default"].createElement("div", {
    "data-testid": "a"
  }, x));
};

Comp = (0, _fp.flow)((0, _.addState)('x', 'setX', 'aaa'), (0, _.addLayoutEffect)(function (_ref2) {
  var setX = _ref2.setX;
  return function () {
    // axios.get.mockResolvedValueOnce data: greeting: 'ddd'
    // {data: {greeting}} = await axios.get 'SOME_URL'
    return setX('ddd');
  };
}), (0, _react.createFactory)(DisplayComp));
Comp2 = (0, _fp.flow)((0, _.addState)('x', 'setX', 0), (0, _.addLayoutEffect)(function (_ref3) {
  var x = _ref3.x,
      setX = _ref3.setX;
  return function () {
    return setX(x + 1);
  };
}, []), function (_ref4) {
  var x = _ref4.x,
      testId = _ref4.testId;
  return _react["default"].createElement("div", {
    "data-testid": testId
  }, x);
});
Comp3 = (0, _fp.flow)((0, _.addState)('x', 'setX', 0), (0, _.addLayoutEffect)(function (_ref5) {
  var x = _ref5.x,
      setX = _ref5.setX;
  return function () {
    return setX(x + 1);
  };
}, ['y']), function (_ref6) {
  var x = _ref6.x,
      testId = _ref6.testId;
  return _react["default"].createElement("div", {
    "data-testid": testId
  }, x);
});
PathDependency = (0, _fp.flow)((0, _.addState)('x', 'setX', 0), (0, _.addLayoutEffect)(function (_ref7) {
  var x = _ref7.x,
      setX = _ref7.setX;
  return function () {
    return setX(x + 1);
  };
}, ['y', 'user.id']), function (_ref8) {
  var x = _ref8.x,
      testId = _ref8.testId;
  return _react["default"].createElement("div", {
    "data-testid": testId
  }, x);
});
Comp4 = (0, _fp.flow)((0, _.addState)('x', 'setX', 0), (0, _.addLayoutEffect)(function (_ref9) {
  var x = _ref9.x,
      setX = _ref9.setX;
  return function () {
    return setX(x + 1);
  };
}, function (prevProps, props) {
  return prevProps.y < props.y;
}), function (_ref10) {
  var x = _ref10.x,
      testId = _ref10.testId;
  return _react["default"].createElement("div", {
    "data-testid": testId
  }, x);
});
describe('addLayoutEffect', function () {
  test('fires', function _callee() {
    var getByText, rerender, updatedEl, _render;

    return regeneratorRuntime.async(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _render = (0, _reactTestingLibrary.render)(_react["default"].createElement(Comp, null));
            getByText = _render.getByText;
            rerender = _render.rerender;
            rerender(_react["default"].createElement(Comp, null));
            _context.next = 6;
            return regeneratorRuntime.awrap((0, _reactTestingLibrary.waitForElement)(function () {
              return getByText('ddd');
            }));

          case 6:
            updatedEl = _context.sent;
            return _context.abrupt("return", expect(updatedEl).toHaveTextContent('ddd'));

          case 8:
          case "end":
            return _context.stop();
        }
      }
    });
  });
  test('passes changed-props arg to useLayoutEffect()', function () {
    var getByTestId, rerender, testId;
    testId = 'comp2';

    var _render2 = (0, _reactTestingLibrary.render)(_react["default"].createElement(Comp2, {
      testId: testId
    }));

    rerender = _render2.rerender;
    getByTestId = _render2.getByTestId;
    expect(getByTestId(testId)).toHaveTextContent('1');
    rerender(_react["default"].createElement(Comp2, {
      testId: testId
    }));
    return expect(getByTestId(testId)).toHaveTextContent('1');
  });
  test('accepts simple dependencies', function () {
    var getByTestId, rerender, testId;
    testId = 'comp3';

    var _render3 = (0, _reactTestingLibrary.render)(_react["default"].createElement(Comp3, {
      y: 1,
      z: 2,
      testId: testId
    }));

    getByTestId = _render3.getByTestId;
    rerender = _render3.rerender;
    expect(getByTestId(testId)).toHaveTextContent('1');
    rerender(_react["default"].createElement(Comp3, {
      y: 1,
      z: 3,
      testId: testId
    }));
    expect(getByTestId(testId)).toHaveTextContent('1');
    rerender(_react["default"].createElement(Comp3, {
      y: 2,
      z: 3,
      testId: testId
    }));
    return expect(getByTestId(testId)).toHaveTextContent('2');
  });
  test('accepts path dependencies', function () {
    var getByTestId, rerender, testId;
    testId = 'path-dependency';

    var _render4 = (0, _reactTestingLibrary.render)(_react["default"].createElement(PathDependency, {
      y: 1,
      z: 2,
      testId: testId,
      user: {
        id: 3
      }
    }));

    getByTestId = _render4.getByTestId;
    rerender = _render4.rerender;
    expect(getByTestId(testId)).toHaveTextContent('1');
    rerender(_react["default"].createElement(PathDependency, {
      y: 1,
      z: 3,
      testId: testId,
      user: {
        id: 3
      }
    }));
    expect(getByTestId(testId)).toHaveTextContent('1');
    rerender(_react["default"].createElement(PathDependency, {
      y: 2,
      z: 3,
      testId: testId,
      user: {
        id: 3
      }
    }));
    expect(getByTestId(testId)).toHaveTextContent('2');
    rerender(_react["default"].createElement(PathDependency, {
      y: 2,
      z: 3,
      testId: testId,
      user: {
        id: 4
      }
    }));
    return expect(getByTestId(testId)).toHaveTextContent('3');
  });
  return test('accepts callback dependencies argument', function () {
    var getByTestId, rerender, testId;
    testId = 'comp4';

    var _render5 = (0, _reactTestingLibrary.render)(_react["default"].createElement(Comp4, {
      y: 1,
      z: 2,
      testId: testId
    }));

    getByTestId = _render5.getByTestId;
    rerender = _render5.rerender;
    expect(getByTestId(testId)).toHaveTextContent('1');
    rerender(_react["default"].createElement(Comp4, {
      y: 1,
      z: 3,
      testId: testId
    }));
    expect(getByTestId(testId)).toHaveTextContent('1');
    rerender(_react["default"].createElement(Comp4, {
      y: 0,
      z: 3,
      testId: testId
    }));
    expect(getByTestId(testId)).toHaveTextContent('1');
    rerender(_react["default"].createElement(Comp4, {
      y: 2,
      z: 3,
      testId: testId
    }));
    return expect(getByTestId(testId)).toHaveTextContent('2');
  });
});